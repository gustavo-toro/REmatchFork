lexer grammar REmatchLexer;

DECIMAL_DIGIT: '\\d';
NOT_DECIMAL_DIGIT: '\\D';
HORIZONTAL_WHITESPACE: '\\h';
NOT_HORIZONTAL_WHITESPACE: '\\H';
NEW_LINE: '\\n';
NOT_NEW_LINE: '\\N';
WHITESPACE: '\\s';
NOT_WHITESPACE: '\\S';
VERTICAL_WHITESPACE: '\\v';
NOT_VERTICAL_WHITESPACE: '\\V';
WORD_CHAR: '\\w';
NOT_WORD_CHAR: '\\W';

PIPE: '|';
EXCLAMAITON: '!';
L_CURLY: '{';
R_CURLY: '}';
L_PAR: '(';
R_PAR: ')';
COMMA: ',';
QUESTION: '?';
PLUS: '+';
STAR: '*';
HAT: '^';
HYPHEN: '-';
L_BRACK: '[';
R_BRACK: ']';
BACKSLASH: '\\';
DIGIT: [0-9];
ALPHANUMERIC: [A-Za-z0-9];
DOT: '.';

ANY: .;

// Composed tokens VARNAME: EXCLAMATION_MARK [A-Za-z0-9\-_]+; WHITESPACE_CHARS: BACKSLASH [fnrt];
// ANY_DIGIT: BACKSLASH 'd'; NOT_ANY_DIGIT: BACKSLASH 'D'; ANY_WHITESPACE: BACKSLASH 's';
// NOT_ANY_WHITESPACE: BACKSLASH 'S'; ANY_ALPHA: BACKSLASH 'w'; NOT_ANY_ALPHA: BACKSLASH 'W';

// // Single tokens ANY: '.'; DIGIT: [0-9]; EXCLAMATION_MARK: '!'; L_PAR: '('; R_PAR: ')'; L_BRACK:
// '['; R_BRACK: ']'; L_CURLY: '{'; R_CURLY: '}'; COMMA: ','; UNDERSCORE: '_'; HAT: '^'; HYPHEN:
// '-'; QUESTION_MARK: '?'; ASTERISK: '*'; PLUS: '+'; VERBAR: '|'; BACKSLASH: '\\';

// UNRECOGNIZED: .;